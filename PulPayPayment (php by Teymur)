<?php

class PulPayPayment
{
    /*
     * Test Kart
     * PAN: 4169741370562587
     * date: 01/22
     * CVV: 544
     * */
    protected $key = 'p2@lzj9L@XAq#lM$45x#xZYys!eX@FiD';
    protected $salt = 'dy!HV2@k38c#2w&m@iZQ&xvc#b27f@DI';
    protected $production = false;
    protected $testMerchantId;
    protected $testUrl = 'https://pay-dev.pulpal.az/payment';
    protected $merchantId;
    protected $url = 'https://pay.pulpal.az/payment';
    protected $price;
    protected $externalId;
    protected $repeatable = 'true';
    protected $name_az;
    protected $name_en;
    protected $name_ru;
    protected $description_az;
    protected $description_en;
    protected $description_ru;

    /*
     * Set Test MerchantId
     * Bu hissede text merchant
     * id set edirik
     * */
    public function setTestMerchantId($val)
    {
        $this->testMerchantId = $val;
    }

    /*
     * Set MerchantId
     * Bu hissede merchant
     * id set edirik
     * */
    public function setMerchantId($val)
    {
        $this->merchantId = $val;
    }

    /*
     * Signature
     * Bu hissede gonderilevek imazni
     * teyin edirik
     * */
    public function signature()
    {
        $epochTime = intval((time() * 1000) / 300000);
        $merchantId = $this->production ? $this->merchantId : $this->testMerchantId;
        $result = $this->name_az;
        $result .= $this->name_en;
        $result .= $this->name_ru;
        $result .= $this->description_az;
        $result .= $this->description_en;
        $result .= $this->description_ru;
        $result .= $merchantId;
        $result .= $this->externalId;
        $result .= $this->price;
        $result .= $epochTime;
        $result .= $this->salt;
        return sha1($result);
    }

    /*
     * Api Params
     * Bu hissede requeste gonderilecek
     * parametirleri elave edirik
     * */
    public function apiParams()
    {
        $merchantId = $this->production ? $this->merchantId : $this->testMerchantId;
        $params = [
            'merchantId' => $merchantId,
            'price' => $this->price,
            'repeatable' => $this->repeatable,
            'name_az' => $this->name_az,
            'name_ru' => $this->name_ru,
            'name_en' => $this->name_en,
            'description_en' => $this->description_en,
            'description_ru' => $this->description_ru,
            'description_az' => $this->description_az,
            'externalId' => $this->externalId,
            'signature2' => $this->signature(),
        ];
        return http_build_query($params);
    }

    /*
     * Get URL
     * Bu hissede odenis etmek ucun url
     * hazirlayiriq
     * */
    public function getUrl($id, $price, $name, $description)
    {
        $this->externalId = $id;
        $this->price = $price * 100;
        $this->name_az = $name;
        $this->name_en = $name;
        $this->name_ru = $name;
        $this->description_az = $description;
        $this->description_en = $description;
        $this->description_ru = $description;

        $url = $this->production ? $this->url : $this->testUrl;

        return $url . '?' . $this->apiParams();
    }

    /*
     * Delivery
     * Bu hissede odenis basa catdiqdan sonra
     * hansi proseslerin olmasini siteyirkse
     * o kodlari yaziriq
     * */
    public function delivery()
    {
        $request_fields = file_get_contents('php://input'); //sizin framework-unuz request body-ni başqa cür əldə edə bilər
        $request = json_decode($request_fields, true);
        $nonce = request()->header('nonce');
        $signature = request()->header('signature');

        $price = $request['Price'];
        $debt = $request['Debt'];
        $product_type = $request['ProductType'];
        $amount = $request['Amount'];
        $provider_type = $request['ProviderType'];
        $payment_attempt = $request['PaymentAttempt'];
        $external = $request['ExternalId'];

        $my_signature = base64_encode(pack('H*', hash_hmac('sha256', route('payment.delivery') . $nonce . $request_fields, $this->key)));
        /*
         * Bu hissede odenis tamamlandiqdan sonra
         * edilecek emeliyyatlari yaziriq
         * */
        if ($nonce > 0 && $my_signature == $signature):

        endif;
        return false;
    }

    /*
     * Redirect
     * Bu hissede PulPal-dan redirect url
     * sorgu geldikde edilecekleri yaziriq
     * */
    public function redirect()
    {
        $request = request()->query('ExternalId');
        $request = $request ? json_decode($request, true) : [];
        return route('web.index');
    }
}
